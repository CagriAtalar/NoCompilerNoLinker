#include <stdio.h>
#include <stdint.h>
#include <string.h>
#include <elf.h>

int main() {
    FILE *f = fopen("tiny_hello", "wb");

    Elf64_Ehdr eh = {0};
    memcpy(eh.e_ident, ELFMAG, SELFMAG);
    eh.e_ident[EI_CLASS] = ELFCLASS64;
    eh.e_ident[EI_DATA]  = ELFDATA2LSB;
    eh.e_ident[EI_VERSION] = EV_CURRENT;
    eh.e_ident[EI_OSABI] = ELFOSABI_SYSV;
    eh.e_type = ET_EXEC;
    eh.e_machine = EM_X86_64;
    eh.e_version = EV_CURRENT;
    eh.e_entry = 0x400078;
    eh.e_phoff = sizeof(Elf64_Ehdr);
    eh.e_ehsize = sizeof(Elf64_Ehdr);
    eh.e_phentsize = sizeof(Elf64_Phdr);
    eh.e_phnum = 1;

    Elf64_Phdr ph = {0};
    ph.p_type = PT_LOAD;
    ph.p_offset = 0;
    ph.p_vaddr = 0x400000;
    ph.p_paddr = 0x400000;
    ph.p_filesz = ph.p_memsz = 0x1000;
    ph.p_flags = PF_R | PF_X;
    ph.p_align = 0x1000;

    // Makine kodumuz
    unsigned char code[] = {
        0xb8,0x01,0x00,0x00,0x00,              // mov eax,1 (sys_write)
        0xbf,0x01,0x00,0x00,0x00,              // mov edi,1 (stdout)
        // lea rsi,[rip+0x10] - MESAJIN ADRESINI YUKLE. OFSET 0x0e'DEN 0x10'A DUZELTILDI.
        0x48,0x8d,0x35,0x10,0x00,0x00,0x00,  
        0xba,0x03,0x00,0x00,0x00,              // mov edx,3 (mesaj uzunlugu)
        0x0f,0x05,                             // syscall
        0xb8,0x3c,0x00,0x00,0x00,              // mov eax,60 (sys_exit)
        0x31,0xff,                             // xor edi,edi (exit code 0)
        0x0f,0x05,                             // syscall
        'H','i','\n'                           // mesaj ("Hi\n")
    };

    fwrite(&eh, sizeof(eh), 1, f);
    fwrite(&ph, sizeof(ph), 1, f);

    // boşluk doldur: kodu 0x78 offsetine koyacağız
    int pad = 0x78 - (sizeof(eh) + sizeof(ph));
    for (int i = 0; i < pad; i++) fputc(0, f);

    fwrite(code, sizeof(code), 1, f);

    fclose(f);
    
    // İşlem bittikten sonra dosyayı çalıştırılabilir yapmayı unutmayın:
    // chmod +x tiny_hello
    
    return 0;
}
